34
1 - Test case for Iteration1  ::
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt#= 13
11
5000
2 - Test case for Iteration1  ::
stmt s;
Select s such that Parent (s, 22)
19
5000
3 - Test case for Iteration1  ::
stmt s,;
Select s such that Parent (9, s)
10, 11, 17
5000
4 - Test case for Iteration1  ::
stmt s, s1;
Select s such that Parent*(s, s1) with s1.stmt#= 13
11
5000
5 - Test case for Iteration1  ::
while w;
Select w such that Parent* (w, 10)
9
5000
6 - Test case for Iteration1  ::
stmt s; while w;
Select s such that Parent* (w, 10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
5000
7 - Test case for Iteration1  ::
stmt s;
Select s such that Follows (s, 10)
none
5000
8 - Test case for Iteration1  ::
assign a;
Select a such that Follows (a, 9)
8
5000
9 - Test case for Iteration1  ::
stmt s; while w;
Select w such that Follows* (s, w)
9
5000
10 - Test case for Iteration1  ::
stmt s;
Select s such that Follows* (s, 21)
20
5000
11 - Test case for Iteration1  ::
if ifstat;
Select ifstat such that Follows* (ifstat, 17)
11
5000
12 - Test case for Iteration1  ::
assign a;
Select a such that Follows* (a, 9)
1, 2, 3, 4, 6, 8
5000
13 - Test case for Iteration1  ::
variable v;
Select v such that Modifies (11, v)
i, x, y, z
5000
14 - Test case for Iteration1  ::
variable v; while w;
Select w such that Modifies (w, "i")
9, 19
5000
15 - Test case for Iteration1  ::
variable v;
Select v such that Modifies ("Mary", v)
i, y, z
5000
16 - Test case for Iteration1  ::
stmt s;
Select s such that Uses (s, "i")
5, 9, 11, 16, 18, 19, 21, 22, 23, 27, 28
5000
17 - Test case for Iteration1  ::
variable v;
Select v such that Uses (10, v)
x, y
5000
18 - Test case for Iteration1  ::
variable v; assign a;
Select v such that Uses (a, v)
e, d, i, x, y, z
5000
19 - Test case for Iteration1  ::
assign a;
Select a such that Modifies (a, "z") and Uses (a, "z")
25, 30
5000
20 - Test case for Iteration1  ::
assign a; while w;
Select a such that Modifies (a, "z") and Parent (w, a)
20, 25
5000
21 - Test case for Iteration1  ::
assign a; while w;
Select a such that Parent (w, a) and Modifies (a, "z")
20, 25
5000
22 - Test case for Iteration1  ::
assign a; while w;
Select a such that Modifies (a, "z") such that Parent (w, a)
20, 25
5000
23 - Test case for Iteration1  ::
assign a;
Select a pattern a ("y", _)
3, 12, 23, 29
5000
24 - Test case for Iteration1  ::
assign a;
Select a pattern a ("z", "2*x")
none
5000
25 - Test case for Iteration1  ::
assign a; while w;
Select a pattern a ("x", _) such that Follows (w, a)
26
5000
26 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, "y+1")
13
5000
27 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, "x-y")
10
5000
28 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, _"y*3+2"_)
none
5000
29 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, _"y+e*d"_)
none
5000
30 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, _"y+z"_)
12, 14, 17, 23
5000
31 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, _"z+i"_)
none
5000
32 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, _"2*x"_)
20
5000
33 - Test case for Iteration1  ::
assign a;
Select a pattern a (_, _"3+2"_)
none
5000
34 - Test case for Iteration1  ::
stmt s; constant c;
Select s with s.stmt# = c.value
1, 2, 3, 4, 5, 10, 12
5000